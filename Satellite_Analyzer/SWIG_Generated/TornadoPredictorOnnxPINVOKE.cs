//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (https://www.swig.org).
// Version 4.2.1
//
// Do not make changes to this file unless you know what you are doing - modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


class TornadoPredictorOnnxPINVOKE {

  protected class SWIGExceptionHelper {

    public delegate void ExceptionDelegate(string message);
    public delegate void ExceptionArgumentDelegate(string message, string paramName);

    static ExceptionDelegate applicationDelegate = new ExceptionDelegate(SetPendingApplicationException);
    static ExceptionDelegate arithmeticDelegate = new ExceptionDelegate(SetPendingArithmeticException);
    static ExceptionDelegate divideByZeroDelegate = new ExceptionDelegate(SetPendingDivideByZeroException);
    static ExceptionDelegate indexOutOfRangeDelegate = new ExceptionDelegate(SetPendingIndexOutOfRangeException);
    static ExceptionDelegate invalidCastDelegate = new ExceptionDelegate(SetPendingInvalidCastException);
    static ExceptionDelegate invalidOperationDelegate = new ExceptionDelegate(SetPendingInvalidOperationException);
    static ExceptionDelegate ioDelegate = new ExceptionDelegate(SetPendingIOException);
    static ExceptionDelegate nullReferenceDelegate = new ExceptionDelegate(SetPendingNullReferenceException);
    static ExceptionDelegate outOfMemoryDelegate = new ExceptionDelegate(SetPendingOutOfMemoryException);
    static ExceptionDelegate overflowDelegate = new ExceptionDelegate(SetPendingOverflowException);
    static ExceptionDelegate systemDelegate = new ExceptionDelegate(SetPendingSystemException);

    static ExceptionArgumentDelegate argumentDelegate = new ExceptionArgumentDelegate(SetPendingArgumentException);
    static ExceptionArgumentDelegate argumentNullDelegate = new ExceptionArgumentDelegate(SetPendingArgumentNullException);
    static ExceptionArgumentDelegate argumentOutOfRangeDelegate = new ExceptionArgumentDelegate(SetPendingArgumentOutOfRangeException);

    [global::System.Runtime.InteropServices.DllImport("TornadoPredictorOnnx", EntryPoint="SWIGRegisterExceptionCallbacks_TornadoPredictorOnnx")]
    public static extern void SWIGRegisterExceptionCallbacks_TornadoPredictorOnnx(
                                ExceptionDelegate applicationDelegate,
                                ExceptionDelegate arithmeticDelegate,
                                ExceptionDelegate divideByZeroDelegate, 
                                ExceptionDelegate indexOutOfRangeDelegate, 
                                ExceptionDelegate invalidCastDelegate,
                                ExceptionDelegate invalidOperationDelegate,
                                ExceptionDelegate ioDelegate,
                                ExceptionDelegate nullReferenceDelegate,
                                ExceptionDelegate outOfMemoryDelegate, 
                                ExceptionDelegate overflowDelegate, 
                                ExceptionDelegate systemExceptionDelegate);

    [global::System.Runtime.InteropServices.DllImport("TornadoPredictorOnnx", EntryPoint="SWIGRegisterExceptionArgumentCallbacks_TornadoPredictorOnnx")]
    public static extern void SWIGRegisterExceptionCallbacksArgument_TornadoPredictorOnnx(
                                ExceptionArgumentDelegate argumentDelegate,
                                ExceptionArgumentDelegate argumentNullDelegate,
                                ExceptionArgumentDelegate argumentOutOfRangeDelegate);

    static void SetPendingApplicationException(string message) {
      SWIGPendingException.Set(new global::System.ApplicationException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingArithmeticException(string message) {
      SWIGPendingException.Set(new global::System.ArithmeticException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingDivideByZeroException(string message) {
      SWIGPendingException.Set(new global::System.DivideByZeroException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingIndexOutOfRangeException(string message) {
      SWIGPendingException.Set(new global::System.IndexOutOfRangeException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingInvalidCastException(string message) {
      SWIGPendingException.Set(new global::System.InvalidCastException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingInvalidOperationException(string message) {
      SWIGPendingException.Set(new global::System.InvalidOperationException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingIOException(string message) {
      SWIGPendingException.Set(new global::System.IO.IOException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingNullReferenceException(string message) {
      SWIGPendingException.Set(new global::System.NullReferenceException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingOutOfMemoryException(string message) {
      SWIGPendingException.Set(new global::System.OutOfMemoryException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingOverflowException(string message) {
      SWIGPendingException.Set(new global::System.OverflowException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingSystemException(string message) {
      SWIGPendingException.Set(new global::System.SystemException(message, SWIGPendingException.Retrieve()));
    }

    static void SetPendingArgumentException(string message, string paramName) {
      SWIGPendingException.Set(new global::System.ArgumentException(message, paramName, SWIGPendingException.Retrieve()));
    }
    static void SetPendingArgumentNullException(string message, string paramName) {
      global::System.Exception e = SWIGPendingException.Retrieve();
      if (e != null) message = message + " Inner Exception: " + e.Message;
      SWIGPendingException.Set(new global::System.ArgumentNullException(paramName, message));
    }
    static void SetPendingArgumentOutOfRangeException(string message, string paramName) {
      global::System.Exception e = SWIGPendingException.Retrieve();
      if (e != null) message = message + " Inner Exception: " + e.Message;
      SWIGPendingException.Set(new global::System.ArgumentOutOfRangeException(paramName, message));
    }

    static SWIGExceptionHelper() {
      SWIGRegisterExceptionCallbacks_TornadoPredictorOnnx(
                                applicationDelegate,
                                arithmeticDelegate,
                                divideByZeroDelegate,
                                indexOutOfRangeDelegate,
                                invalidCastDelegate,
                                invalidOperationDelegate,
                                ioDelegate,
                                nullReferenceDelegate,
                                outOfMemoryDelegate,
                                overflowDelegate,
                                systemDelegate);

      SWIGRegisterExceptionCallbacksArgument_TornadoPredictorOnnx(
                                argumentDelegate,
                                argumentNullDelegate,
                                argumentOutOfRangeDelegate);
    }
  }

  protected static SWIGExceptionHelper swigExceptionHelper = new SWIGExceptionHelper();

  public class SWIGPendingException {
    [global::System.ThreadStatic]
    private static global::System.Exception pendingException = null;
    private static int numExceptionsPending = 0;
    private static global::System.Object exceptionsLock = null;

    public static bool Pending {
      get {
        bool pending = false;
        if (numExceptionsPending > 0)
          if (pendingException != null)
            pending = true;
        return pending;
      } 
    }

    public static void Set(global::System.Exception e) {
      if (pendingException != null)
        throw new global::System.ApplicationException("FATAL: An earlier pending exception from unmanaged code was missed and thus not thrown (" + pendingException.ToString() + ")", e);
      pendingException = e;
      lock(exceptionsLock) {
        numExceptionsPending++;
      }
    }

    public static global::System.Exception Retrieve() {
      global::System.Exception e = null;
      if (numExceptionsPending > 0) {
        if (pendingException != null) {
          e = pendingException;
          pendingException = null;
          lock(exceptionsLock) {
            numExceptionsPending--;
          }
        }
      }
      return e;
    }

    static SWIGPendingException() {
      exceptionsLock = new global::System.Object();
    }
  }


  protected class SWIGStringHelper {

    public delegate string SWIGStringDelegate(string message);
    static SWIGStringDelegate stringDelegate = new SWIGStringDelegate(CreateString);

    [global::System.Runtime.InteropServices.DllImport("TornadoPredictorOnnx", EntryPoint="SWIGRegisterStringCallback_TornadoPredictorOnnx")]
    public static extern void SWIGRegisterStringCallback_TornadoPredictorOnnx(SWIGStringDelegate stringDelegate);

    static string CreateString(string cString) {
      return cString;
    }

    static SWIGStringHelper() {
      SWIGRegisterStringCallback_TornadoPredictorOnnx(stringDelegate);
    }
  }

  static protected SWIGStringHelper swigStringHelper = new SWIGStringHelper();


  static TornadoPredictorOnnxPINVOKE() {
  }


  [global::System.Runtime.InteropServices.DllImport("TornadoPredictorOnnx", EntryPoint="CSharp_new_ByteVector__SWIG_0")]
  public static extern global::System.IntPtr new_ByteVector__SWIG_0();

  [global::System.Runtime.InteropServices.DllImport("TornadoPredictorOnnx", EntryPoint="CSharp_new_ByteVector__SWIG_1")]
  public static extern global::System.IntPtr new_ByteVector__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("TornadoPredictorOnnx", EntryPoint="CSharp_ByteVector_Clear")]
  public static extern void ByteVector_Clear(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("TornadoPredictorOnnx", EntryPoint="CSharp_ByteVector_Add")]
  public static extern void ByteVector_Add(global::System.Runtime.InteropServices.HandleRef jarg1, byte jarg2);

  [global::System.Runtime.InteropServices.DllImport("TornadoPredictorOnnx", EntryPoint="CSharp_ByteVector_size")]
  public static extern uint ByteVector_size(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("TornadoPredictorOnnx", EntryPoint="CSharp_ByteVector_empty")]
  public static extern bool ByteVector_empty(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("TornadoPredictorOnnx", EntryPoint="CSharp_ByteVector_capacity")]
  public static extern uint ByteVector_capacity(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("TornadoPredictorOnnx", EntryPoint="CSharp_ByteVector_reserve")]
  public static extern void ByteVector_reserve(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

  [global::System.Runtime.InteropServices.DllImport("TornadoPredictorOnnx", EntryPoint="CSharp_new_ByteVector__SWIG_2")]
  public static extern global::System.IntPtr new_ByteVector__SWIG_2(int jarg1);

  [global::System.Runtime.InteropServices.DllImport("TornadoPredictorOnnx", EntryPoint="CSharp_ByteVector_getitemcopy")]
  public static extern byte ByteVector_getitemcopy(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("TornadoPredictorOnnx", EntryPoint="CSharp_ByteVector_getitem")]
  public static extern byte ByteVector_getitem(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("TornadoPredictorOnnx", EntryPoint="CSharp_ByteVector_setitem")]
  public static extern void ByteVector_setitem(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, byte jarg3);

  [global::System.Runtime.InteropServices.DllImport("TornadoPredictorOnnx", EntryPoint="CSharp_ByteVector_AddRange")]
  public static extern void ByteVector_AddRange(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("TornadoPredictorOnnx", EntryPoint="CSharp_ByteVector_GetRange")]
  public static extern global::System.IntPtr ByteVector_GetRange(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, int jarg3);

  [global::System.Runtime.InteropServices.DllImport("TornadoPredictorOnnx", EntryPoint="CSharp_ByteVector_Insert")]
  public static extern void ByteVector_Insert(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, byte jarg3);

  [global::System.Runtime.InteropServices.DllImport("TornadoPredictorOnnx", EntryPoint="CSharp_ByteVector_InsertRange")]
  public static extern void ByteVector_InsertRange(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

  [global::System.Runtime.InteropServices.DllImport("TornadoPredictorOnnx", EntryPoint="CSharp_ByteVector_RemoveAt")]
  public static extern void ByteVector_RemoveAt(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("TornadoPredictorOnnx", EntryPoint="CSharp_ByteVector_RemoveRange")]
  public static extern void ByteVector_RemoveRange(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, int jarg3);

  [global::System.Runtime.InteropServices.DllImport("TornadoPredictorOnnx", EntryPoint="CSharp_ByteVector_Repeat")]
  public static extern global::System.IntPtr ByteVector_Repeat(byte jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("TornadoPredictorOnnx", EntryPoint="CSharp_ByteVector_Reverse__SWIG_0")]
  public static extern void ByteVector_Reverse__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("TornadoPredictorOnnx", EntryPoint="CSharp_ByteVector_Reverse__SWIG_1")]
  public static extern void ByteVector_Reverse__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, int jarg3);

  [global::System.Runtime.InteropServices.DllImport("TornadoPredictorOnnx", EntryPoint="CSharp_ByteVector_SetRange")]
  public static extern void ByteVector_SetRange(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

  [global::System.Runtime.InteropServices.DllImport("TornadoPredictorOnnx", EntryPoint="CSharp_ByteVector_Contains")]
  public static extern bool ByteVector_Contains(global::System.Runtime.InteropServices.HandleRef jarg1, byte jarg2);

  [global::System.Runtime.InteropServices.DllImport("TornadoPredictorOnnx", EntryPoint="CSharp_ByteVector_IndexOf")]
  public static extern int ByteVector_IndexOf(global::System.Runtime.InteropServices.HandleRef jarg1, byte jarg2);

  [global::System.Runtime.InteropServices.DllImport("TornadoPredictorOnnx", EntryPoint="CSharp_ByteVector_LastIndexOf")]
  public static extern int ByteVector_LastIndexOf(global::System.Runtime.InteropServices.HandleRef jarg1, byte jarg2);

  [global::System.Runtime.InteropServices.DllImport("TornadoPredictorOnnx", EntryPoint="CSharp_ByteVector_Remove")]
  public static extern bool ByteVector_Remove(global::System.Runtime.InteropServices.HandleRef jarg1, byte jarg2);

  [global::System.Runtime.InteropServices.DllImport("TornadoPredictorOnnx", EntryPoint="CSharp_delete_ByteVector")]
  public static extern void delete_ByteVector(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("TornadoPredictorOnnx", EntryPoint="CSharp_new_FloatVector__SWIG_0")]
  public static extern global::System.IntPtr new_FloatVector__SWIG_0();

  [global::System.Runtime.InteropServices.DllImport("TornadoPredictorOnnx", EntryPoint="CSharp_new_FloatVector__SWIG_1")]
  public static extern global::System.IntPtr new_FloatVector__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("TornadoPredictorOnnx", EntryPoint="CSharp_FloatVector_Clear")]
  public static extern void FloatVector_Clear(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("TornadoPredictorOnnx", EntryPoint="CSharp_FloatVector_Add")]
  public static extern void FloatVector_Add(global::System.Runtime.InteropServices.HandleRef jarg1, float jarg2);

  [global::System.Runtime.InteropServices.DllImport("TornadoPredictorOnnx", EntryPoint="CSharp_FloatVector_size")]
  public static extern uint FloatVector_size(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("TornadoPredictorOnnx", EntryPoint="CSharp_FloatVector_empty")]
  public static extern bool FloatVector_empty(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("TornadoPredictorOnnx", EntryPoint="CSharp_FloatVector_capacity")]
  public static extern uint FloatVector_capacity(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("TornadoPredictorOnnx", EntryPoint="CSharp_FloatVector_reserve")]
  public static extern void FloatVector_reserve(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

  [global::System.Runtime.InteropServices.DllImport("TornadoPredictorOnnx", EntryPoint="CSharp_new_FloatVector__SWIG_2")]
  public static extern global::System.IntPtr new_FloatVector__SWIG_2(int jarg1);

  [global::System.Runtime.InteropServices.DllImport("TornadoPredictorOnnx", EntryPoint="CSharp_FloatVector_getitemcopy")]
  public static extern float FloatVector_getitemcopy(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("TornadoPredictorOnnx", EntryPoint="CSharp_FloatVector_getitem")]
  public static extern float FloatVector_getitem(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("TornadoPredictorOnnx", EntryPoint="CSharp_FloatVector_setitem")]
  public static extern void FloatVector_setitem(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, float jarg3);

  [global::System.Runtime.InteropServices.DllImport("TornadoPredictorOnnx", EntryPoint="CSharp_FloatVector_AddRange")]
  public static extern void FloatVector_AddRange(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("TornadoPredictorOnnx", EntryPoint="CSharp_FloatVector_GetRange")]
  public static extern global::System.IntPtr FloatVector_GetRange(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, int jarg3);

  [global::System.Runtime.InteropServices.DllImport("TornadoPredictorOnnx", EntryPoint="CSharp_FloatVector_Insert")]
  public static extern void FloatVector_Insert(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, float jarg3);

  [global::System.Runtime.InteropServices.DllImport("TornadoPredictorOnnx", EntryPoint="CSharp_FloatVector_InsertRange")]
  public static extern void FloatVector_InsertRange(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

  [global::System.Runtime.InteropServices.DllImport("TornadoPredictorOnnx", EntryPoint="CSharp_FloatVector_RemoveAt")]
  public static extern void FloatVector_RemoveAt(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("TornadoPredictorOnnx", EntryPoint="CSharp_FloatVector_RemoveRange")]
  public static extern void FloatVector_RemoveRange(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, int jarg3);

  [global::System.Runtime.InteropServices.DllImport("TornadoPredictorOnnx", EntryPoint="CSharp_FloatVector_Repeat")]
  public static extern global::System.IntPtr FloatVector_Repeat(float jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("TornadoPredictorOnnx", EntryPoint="CSharp_FloatVector_Reverse__SWIG_0")]
  public static extern void FloatVector_Reverse__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("TornadoPredictorOnnx", EntryPoint="CSharp_FloatVector_Reverse__SWIG_1")]
  public static extern void FloatVector_Reverse__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, int jarg3);

  [global::System.Runtime.InteropServices.DllImport("TornadoPredictorOnnx", EntryPoint="CSharp_FloatVector_SetRange")]
  public static extern void FloatVector_SetRange(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

  [global::System.Runtime.InteropServices.DllImport("TornadoPredictorOnnx", EntryPoint="CSharp_FloatVector_Contains")]
  public static extern bool FloatVector_Contains(global::System.Runtime.InteropServices.HandleRef jarg1, float jarg2);

  [global::System.Runtime.InteropServices.DllImport("TornadoPredictorOnnx", EntryPoint="CSharp_FloatVector_IndexOf")]
  public static extern int FloatVector_IndexOf(global::System.Runtime.InteropServices.HandleRef jarg1, float jarg2);

  [global::System.Runtime.InteropServices.DllImport("TornadoPredictorOnnx", EntryPoint="CSharp_FloatVector_LastIndexOf")]
  public static extern int FloatVector_LastIndexOf(global::System.Runtime.InteropServices.HandleRef jarg1, float jarg2);

  [global::System.Runtime.InteropServices.DllImport("TornadoPredictorOnnx", EntryPoint="CSharp_FloatVector_Remove")]
  public static extern bool FloatVector_Remove(global::System.Runtime.InteropServices.HandleRef jarg1, float jarg2);

  [global::System.Runtime.InteropServices.DllImport("TornadoPredictorOnnx", EntryPoint="CSharp_delete_FloatVector")]
  public static extern void delete_FloatVector(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("TornadoPredictorOnnx", EntryPoint="CSharp_createSpan__SWIG_0")]
  public static extern global::System.IntPtr createSpan__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("TornadoPredictorOnnx", EntryPoint="CSharp_createSpan__SWIG_1")]
  public static extern global::System.IntPtr createSpan__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("TornadoPredictorOnnx", EntryPoint="CSharp_getSpanSize__SWIG_0")]
  public static extern uint getSpanSize__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("TornadoPredictorOnnx", EntryPoint="CSharp_getSpanSize__SWIG_1")]
  public static extern uint getSpanSize__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("TornadoPredictorOnnx", EntryPoint="CSharp_getSpanPtr__SWIG_0")]
  public static extern global::System.IntPtr getSpanPtr__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("TornadoPredictorOnnx", EntryPoint="CSharp_getSpanPtr__SWIG_1")]
  public static extern global::System.IntPtr getSpanPtr__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("TornadoPredictorOnnx", EntryPoint="CSharp_freeSpan__SWIG_0")]
  public static extern void freeSpan__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("TornadoPredictorOnnx", EntryPoint="CSharp_freeSpan__SWIG_1")]
  public static extern void freeSpan__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("TornadoPredictorOnnx", EntryPoint="CSharp_createVector__SWIG_0")]
  public static extern global::System.IntPtr createVector__SWIG_0(global::System.IntPtr jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("TornadoPredictorOnnx", EntryPoint="CSharp_createVector__SWIG_1")]
  public static extern global::System.IntPtr createVector__SWIG_1(global::System.IntPtr jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("TornadoPredictorOnnx", EntryPoint="CSharp_createByteVector")]
  public static extern global::System.IntPtr createByteVector(int jarg1);

  [global::System.Runtime.InteropServices.DllImport("TornadoPredictorOnnx", EntryPoint="CSharp_createFloatVector")]
  public static extern global::System.IntPtr createFloatVector(int jarg1);

  [global::System.Runtime.InteropServices.DllImport("TornadoPredictorOnnx", EntryPoint="CSharp_getVector__SWIG_0")]
  public static extern global::System.IntPtr getVector__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("TornadoPredictorOnnx", EntryPoint="CSharp_getVector__SWIG_1")]
  public static extern global::System.IntPtr getVector__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("TornadoPredictorOnnx", EntryPoint="CSharp_OnnxModel_usingGPU_set")]
  public static extern void OnnxModel_usingGPU_set(global::System.Runtime.InteropServices.HandleRef jarg1, bool jarg2);

  [global::System.Runtime.InteropServices.DllImport("TornadoPredictorOnnx", EntryPoint="CSharp_OnnxModel_usingGPU_get")]
  public static extern bool OnnxModel_usingGPU_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("TornadoPredictorOnnx", EntryPoint="CSharp_new_OnnxModel")]
  public static extern global::System.IntPtr new_OnnxModel(string jarg1, string jarg2, uint jarg3);

  [global::System.Runtime.InteropServices.DllImport("TornadoPredictorOnnx", EntryPoint="CSharp_OnnxModel_initializeTensors")]
  public static extern void OnnxModel_initializeTensors(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, int jarg3);

  [global::System.Runtime.InteropServices.DllImport("TornadoPredictorOnnx", EntryPoint="CSharp_OnnxModel_predict")]
  public static extern void OnnxModel_predict(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("TornadoPredictorOnnx", EntryPoint="CSharp_delete_OnnxModel")]
  public static extern void delete_OnnxModel(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("TornadoPredictorOnnx", EntryPoint="CSharp_new_TornadoPatchPredictor")]
  public static extern global::System.IntPtr new_TornadoPatchPredictor(string jarg1);

  [global::System.Runtime.InteropServices.DllImport("TornadoPredictorOnnx", EntryPoint="CSharp_TornadoPatchPredictor_analyze")]
  public static extern global::System.IntPtr TornadoPatchPredictor_analyze(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, global::System.Runtime.InteropServices.HandleRef jarg3, int jarg4, int jarg5);

  [global::System.Runtime.InteropServices.DllImport("TornadoPredictorOnnx", EntryPoint="CSharp_delete_TornadoPatchPredictor")]
  public static extern void delete_TornadoPatchPredictor(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("TornadoPredictorOnnx", EntryPoint="CSharp_TornadoPatchPredictor_SWIGUpcast")]
  public static extern global::System.IntPtr TornadoPatchPredictor_SWIGUpcast(global::System.IntPtr jarg1);
}
